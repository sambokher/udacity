{"ast":null,"code":"var _jsxFileName = \"/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { SearchResults } from '../components/SearchResults';\nimport { useState } from 'react';\nimport * as BooksAPI from \"../utilities/BooksAPI\";\nimport PropType from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage({\n  shelves\n}) {\n  _s();\n\n  SearchPage.propType = {\n    shelves: PropType.array.isRequired\n  };\n  const [results, setResults] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  function handleInput(e) {\n    const query = e.target.value;\n    setInput(query);\n    console.log(query);\n\n    if (query) {\n      BooksAPI.search(query.trim(), 20).then(response => {\n        console.log(response);\n        response.length > 0 ? setResults(response) : setResults([]);\n      });\n    } else setResults([]);\n  }\n\n  function updateBook(book, newShelf) {\n    console.log(book);\n    console.log(newShelf); // TODO API call, currently not working\n\n    BooksAPI.update(book, newShelf).then(response => {\n      console.log(response);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleInput,\n            value: input,\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(SearchResults, {\n        results: results,\n        shelves: shelves,\n        updateBook: updateBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"31j8pQOqNq8uTCogGS5DTxSoh1I=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/SearchPage.js"],"names":["Link","SearchResults","useState","BooksAPI","PropType","SearchPage","shelves","propType","array","isRequired","results","setResults","input","setInput","handleInput","e","query","target","value","console","log","search","trim","then","response","length","updateBook","book","newShelf","update"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC9CD,EAAAA,UAAU,CAACE,QAAX,GAAsB;AACpBD,IAAAA,OAAO,EAAEF,QAAQ,CAACI,KAAT,CAAeC;AADJ,GAAtB;AAIA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEU,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASY,WAAT,CAAqBC,CAArB,EAAwB;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAL,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AAEA,QAAIA,KAAJ,EAAW;AACPb,MAAAA,QAAQ,CAACkB,MAAT,CAAgBL,KAAK,CAACM,IAAN,EAAhB,EAA8B,EAA9B,EAAkCC,IAAlC,CAAuCC,QAAQ,IAAI;AACnDL,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAA,QAAAA,QAAQ,CAACC,MAAT,GAAkB,CAAlB,GACGd,UAAU,CAACa,QAAD,CADb,GAEGb,UAAU,CAAC,EAAD,CAFb;AAGD,OALC;AAMH,KAPD,MAOOA,UAAU,CAAC,EAAD,CAAV;AAER;;AAED,WAASe,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoC;AAClCT,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EAFkC,CAIlC;;AACAzB,IAAAA,QAAQ,CAAC0B,MAAT,CAAgBF,IAAhB,EAAsBC,QAAtB,EAAgCL,IAAhC,CAAqCC,QAAQ,IAAI;AAC7CL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,KAFD;AAGH;;AACC,sBACE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,QAAQ,EAAEV,WADZ;AAEE,YAAA,KAAK,EAAEF,KAFT;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYIF,OAAO,CAACe,MAAR,GAAiB,CAAjB,gBACE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEf,OAAxB;AAAiC,QAAA,OAAO,EAAEJ,OAA1C;AAAmD,QAAA,UAAU,EAAEoB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADF,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAtDuBrB,U;;KAAAA,U","sourcesContent":["import { Link } from 'react-router-dom';\nimport { SearchResults } from '../components/SearchResults';\nimport { useState } from 'react';\nimport * as BooksAPI from \"../utilities/BooksAPI\";\nimport PropType from 'prop-types';\n\nexport default function SearchPage({ shelves }) {\n  SearchPage.propType = {\n    shelves: PropType.array.isRequired\n  }\n  \n  const [ results, setResults ] = useState([])\n  const [ input, setInput ] = useState(\"\")\n\n  function handleInput(e) {\n    const query = e.target.value\n    setInput(query)\n    console.log(query)\n    \n    if (query) {\n        BooksAPI.search(query.trim(), 20).then(response => {\n        console.log(response)\n        response.length > 0\n         ? setResults(response)\n         : setResults([])\n      })\n    } else setResults([])\n\n  }\n\n  function updateBook(book, newShelf) {\n    console.log(book)\n    console.log(newShelf)\n\n    // TODO API call, currently not working\n    BooksAPI.update(book, newShelf).then(response => {\n        console.log(response)\n    })\n}\n  return (\n    <div>\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link to=\"/\" className=\"close-search\" />\n            <div className=\"search-books-input-wrapper\">\n              <input\n                onChange={handleInput}\n                value={input}\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          { results.length > 0 \n            ? <SearchResults results={results} shelves={shelves} updateBook={updateBook}/> \n            : <div>No results</div>\n          }\n        </div>  \n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}