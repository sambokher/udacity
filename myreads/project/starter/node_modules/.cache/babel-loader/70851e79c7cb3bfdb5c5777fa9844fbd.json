{"ast":null,"code":"var _jsxFileName = \"/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport BookShelf from '../components/BookShelf';\nimport { useState, useEffect } from 'react';\nimport * as BooksAPI from \"../utilities/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  // shelves\n  const shelf1 = [\"currentlyReading\", \"Currently Reading\"];\n  const shelf2 = [\"wantToRead\", \"Want to Read\"];\n  const shelf3 = [\"read\", \"Read\"];\n  const shelves = [shelf1, shelf2, shelf3];\n  const [books, setBooks] = useState([]); // call to get all books\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const response = await BooksAPI.getAll();\n      setBooks(response);\n    };\n\n    getAllBooks();\n  }, []);\n\n  function updateBook(newShelf, bookID) {\n    // API call\n    BooksAPI.update(bookID, newShelf);\n    setContacts(contacts.filter(c => c.id !== contact.id));\n    return; // update books list\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Reads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: shelves.map(shelf => {\n          return /*#__PURE__*/_jsxDEV(BookShelf, {\n            shelf: shelf[1],\n            shelfBooks: books.filter(book => book.shelf === shelf[0]),\n            updateBook: updateBook,\n            shelves: shelves\n          }, shelf[0], false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"open-search\",\n        to: \"/search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"kCB+sN2PU3d12xtEe3Xdmfl2wLs=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/HomePage.js"],"names":["Link","BookShelf","useState","useEffect","BooksAPI","HomePage","shelf1","shelf2","shelf3","shelves","books","setBooks","getAllBooks","response","getAll","updateBook","newShelf","bookID","update","setContacts","contacts","filter","c","id","contact","map","shelf","book"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B;AACA,QAAMC,MAAM,GAAG,CAAC,kBAAD,EAAqB,mBAArB,CAAf;AACA,QAAMC,MAAM,GAAG,CAAC,YAAD,EAAe,cAAf,CAAf;AACA,QAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,MAAT,CAAf;AACA,QAAMC,OAAO,GAAG,CAAEH,MAAF,EAAUC,MAAV,EAAkBC,MAAlB,CAAhB;AAEA,QAAM,CAAEE,KAAF,EAASC,QAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC,CAR+B,CAU/B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,WAAW,GAAG,YAAW;AAC7B,YAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,MAAT,EAAvB;AACAH,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,WAAW;AACZ,GANM,EAML,EANK,CAAT;;AAQA,WAASG,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsC;AAClC;AACAb,IAAAA,QAAQ,CAACc,MAAT,CAAgBD,MAAhB,EAAuBD,QAAvB;AACAG,IAAAA,WAAW,CAACC,QAAQ,CAACC,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASC,OAAO,CAACD,EAAtC,CAAD,CAAX;AAEA,WALkC,CAMlC;AAGH;;AAED,sBACA;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACMd,OAAO,CAACgB,GAAR,CAAaC,KAAD,IAAW;AACrB,8BAAO,QAAC,SAAD;AAEH,YAAA,KAAK,EAAEA,KAAK,CAAC,CAAD,CAFT;AAGH,YAAA,UAAU,EAAEhB,KAAK,CAACW,MAAN,CAAaM,IAAI,IAAIA,IAAI,CAACD,KAAL,KAAeA,KAAK,CAAC,CAAD,CAAzC,CAHT;AAIH,YAAA,UAAU,EAAEX,UAJT;AAKH,YAAA,OAAO,EAAEN;AALN,aACEiB,KAAK,CAAC,CAAD,CADP;AAAA;AAAA;AAAA;AAAA,kBAAP;AAOH,SARC;AADN;AAAA;AAAA;AAAA;AAAA,cAJJ,eAgBA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAsBH;;GApDuBrB,Q;;KAAAA,Q","sourcesContent":["import { Link } from 'react-router-dom';\nimport BookShelf from '../components/BookShelf';\nimport { useState, useEffect } from 'react';\nimport * as BooksAPI from \"../utilities/BooksAPI\";\n\nexport default function HomePage() {\n    \n    // shelves\n    const shelf1 = [\"currentlyReading\", \"Currently Reading\"]\n    const shelf2 = [\"wantToRead\", \"Want to Read\"]\n    const shelf3 = [\"read\", \"Read\"]\n    const shelves = [ shelf1, shelf2, shelf3]\n\n    const [ books, setBooks] = useState([])\n    \n    // call to get all books\n    useEffect(() => {\n        const getAllBooks = async() => {\n          const response = await BooksAPI.getAll(); \n          setBooks(response);\n        }; \n        getAllBooks();\n      },[])\n\n    function updateBook(newShelf, bookID) {\n        // API call\n        BooksAPI.update(bookID,newShelf);\n        setContacts(contacts.filter(c => c.id !== contact.id))\n\n        return;\n        // update books list\n        \n        \n    }\n\n    return (\n    <div>\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>My Reads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                { shelves.map((shelf) => {\n                    return <BookShelf \n                        key={shelf[0]}    \n                        shelf={shelf[1]}\n                        shelfBooks={books.filter(book => book.shelf === shelf[0])}\n                        updateBook={updateBook}\n                        shelves={shelves}\n                        />\n                })}\n                \n            </div>\n        <Link className=\"open-search\" to=\"/search\">Search</Link>\n        </div>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}