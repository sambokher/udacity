{"ast":null,"code":"var _jsxFileName = \"/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { SearchResults } from '../components/SearchResults';\nimport { useState } from 'react';\nimport * as BooksAPI from \"../utilities/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage({\n  shelves\n}) {\n  _s();\n\n  // declare search results as an empty array\n  const [results, setResults] = useState([{}]); // give input a state\n\n  const [input, setInput] = useState(\"\");\n\n  function handleInput(event) {\n    const query = event.target.value;\n    setInput(query);\n    console.log(query);\n    BooksAPI.search(query.trim()).then(response => {\n      console.log(response);\n      setResults(response);\n    });\n  }\n\n  function updateBook(bookID, newShelf) {\n    console.log(bookID);\n    console.log(newShelf); // TODO API call, currently not working\n\n    BooksAPI.update(bookID, newShelf).then(response => {\n      console.log(response);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleInput,\n            value: input,\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n        results: results,\n        shelves: shelves,\n        updateBook: updateBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"Oarih8sgRwNOlCbUoL9HfCa1cwY=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/SearchPage.js"],"names":["Link","SearchResults","useState","BooksAPI","SearchPage","shelves","results","setResults","input","setInput","handleInput","event","query","target","value","console","log","search","trim","then","response","updateBook","bookID","newShelf","update"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA+B;AAAA;;AAE5C;AACA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC,CAH4C,CAK5C;;AACA,QAAM,CAAEM,KAAF,EAASC,QAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASQ,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACAL,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAT,IAAAA,QAAQ,CAACc,MAAT,CAAgBL,KAAK,CAACM,IAAN,EAAhB,EAA8BC,IAA9B,CAAmCC,QAAQ,IAAI;AAC7CL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAb,MAAAA,UAAU,CAACa,QAAD,CAAV;AACD,KAHD;AAID;;AAED,WAASC,UAAT,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACpCR,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ,EAFoC,CAIpC;;AACApB,IAAAA,QAAQ,CAACqB,MAAT,CAAgBF,MAAhB,EAAwBC,QAAxB,EAAkCJ,IAAlC,CAAuCC,QAAQ,IAAI;AAC/CL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,KAFD;AAGH;;AACC,sBACE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,QAAQ,EAAEV,WADZ;AAEE,YAAA,KAAK,EAAEF,KAFT;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,UAAU,EAAEgB;AAHd;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlDuBjB,U;;KAAAA,U","sourcesContent":["import { Link } from 'react-router-dom';\nimport { SearchResults } from '../components/SearchResults';\nimport { useState } from 'react';\nimport * as BooksAPI from \"../utilities/BooksAPI\";\n\nexport default function SearchPage({shelves}) {\n  \n  // declare search results as an empty array\n  const [ results, setResults ] = useState([{}])\n\n  // give input a state\n  const [ input, setInput ] = useState(\"\")\n\n  function handleInput(event) {\n    const query = event.target.value\n    setInput(query)\n    console.log(query)\n    \n    BooksAPI.search(query.trim()).then(response => {\n      console.log(response)\n      setResults(response)\n    })\n  }\n\n  function updateBook(bookID, newShelf) {\n    console.log(bookID)\n    console.log(newShelf)\n\n    // TODO API call, currently not working\n    BooksAPI.update(bookID, newShelf).then(response => {\n        console.log(response)\n    })\n}\n  return (\n    <div>\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link to=\"/\" className=\"close-search\" />\n            <div className=\"search-books-input-wrapper\">\n              <input\n                onChange={handleInput}\n                value={input}\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          \n          <SearchResults \n            results={results} \n            shelves={shelves}\n            updateBook={updateBook}/>\n        </div>  \n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}