{"ast":null,"code":"var _jsxFileName = \"/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { FileEarmarkPdf } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport BookShelf from '../components/BookShelf';\nimport { useState, useEffect } from 'react';\nimport * as BooksApi from \"../utilities/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  // shelves\n  const shelf1 = \"Currently Reading\";\n  const shelf2 = \"Want to Read\";\n  const shelf3 = \"Read\";\n  const shelves = [shelf1, shelf2, shelf3];\n  const [books, setBooks] = useState([{\n    name: \"To Kill a Mockingbird\",\n    author: \"Harper Lee\",\n    imageURL: \"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\",\n    shelf: shelf1\n  }, {\n    name: \"To Kill a Mockingbird\",\n    author: \"Harper Lee\",\n    imageURL: \"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\",\n    shelf: shelf2\n  }]);\n  useEffect(() => {\n    // first we define the getContacts function/ Why async?\n    const getBooks = async () => {\n      // define response const, it \n      const response = await ContactsAPI.getAll(); // update state\n\n      setContacts(response);\n    }; // invoke the function\n\n\n    getContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Reads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: shelves.map(shelf => {\n          return /*#__PURE__*/_jsxDEV(BookShelf, {\n            shelf: shelf,\n            books: books.filter(book => book.shelf === shelf)\n          }, shelf, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"open-search\",\n        to: \"/search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"bv2UwaJ8zfD6nNfRcgcwtzo7j5k=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sambokher/Documents/GitHub/nd0191-c1-myreads/starter/src/pages/HomePage.js"],"names":["FileEarmarkPdf","Link","BookShelf","useState","useEffect","BooksApi","HomePage","shelf1","shelf2","shelf3","shelves","books","setBooks","name","author","imageURL","shelf","getBooks","response","ContactsAPI","getAll","setContacts","getContacts","map","filter","book"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B;AACA,QAAMC,MAAM,GAAG,mBAAf;AACA,QAAMC,MAAM,GAAG,cAAf;AACA,QAAMC,MAAM,GAAG,MAAf;AACA,QAAMC,OAAO,GAAG,CAAEH,MAAF,EAAUC,MAAV,EAAkBC,MAAlB,CAAhB;AAIA,QAAM,CAAEE,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,CAAC;AAClCU,IAAAA,IAAI,EAAE,uBAD4B;AAElCC,IAAAA,MAAM,EAAE,YAF0B;AAGlCC,IAAAA,QAAQ,EAAE,0PAHwB;AAIlCC,IAAAA,KAAK,EAAET;AAJ2B,GAAD,EAMrC;AACIM,IAAAA,IAAI,EAAE,uBADV;AAEIC,IAAAA,MAAM,EAAE,YAFZ;AAGIC,IAAAA,QAAQ,EAAE,0PAHd;AAIIC,IAAAA,KAAK,EAAER;AAJX,GANqC,CAAD,CAApC;AAaAJ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMa,QAAQ,GAAG,YAAW;AAC1B;AACA,YAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACC,MAAZ,EAAvB,CAF0B,CAI1B;;AACAC,MAAAA,WAAW,CAACH,QAAD,CAAX;AACD,KAND,CAFY,CAUZ;;;AACAI,IAAAA,WAAW;AACZ,GAZM,EAYL,EAZK,CAAT;AAeA,sBACA;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACMZ,OAAO,CAACa,GAAR,CAAaP,KAAD,IAAW;AACrB,8BAAO,QAAC,SAAD;AAEH,YAAA,KAAK,EAAEA,KAFJ;AAGH,YAAA,KAAK,EAAEL,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAeA,KAApC;AAHJ,aACEA,KADF;AAAA;AAAA;AAAA;AAAA,kBAAP;AAKH,SANC;AADN;AAAA;AAAA;AAAA;AAAA,cAJJ,eAcA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAoBH;;GA1DuBV,Q;;KAAAA,Q","sourcesContent":["import { FileEarmarkPdf } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport BookShelf from '../components/BookShelf';\nimport { useState, useEffect } from 'react';\nimport * as BooksApi from \"../utilities/BooksAPI\"\n\nexport default function HomePage() {\n    \n    // shelves\n    const shelf1 = \"Currently Reading\";\n    const shelf2 = \"Want to Read\";\n    const shelf3 = \"Read\";\n    const shelves = [ shelf1, shelf2, shelf3]\n    \n\n\n    const [ books, setBooks ] = useState([{\n        name: \"To Kill a Mockingbird\",\n        author: \"Harper Lee\",\n        imageURL: \"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\",\n        shelf: shelf1\n    },\n    {\n        name: \"To Kill a Mockingbird\",\n        author: \"Harper Lee\",\n        imageURL: \"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\",\n        shelf: shelf2\n    }])\n\n    useEffect(() => {\n        // first we define the getContacts function/ Why async?\n        const getBooks = async() => {\n          // define response const, it \n          const response = await ContactsAPI.getAll(); \n          \n          // update state\n          setContacts(response);\n        }; \n    \n        // invoke the function\n        getContacts();\n      },[])\n    \n\n    return (\n    <div>\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>My Reads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                { shelves.map((shelf) => {\n                    return <BookShelf \n                        key={shelf}    \n                        shelf={shelf}\n                        books={books.filter(book => book.shelf === shelf)}\n                        />\n                })}\n                \n            </div>\n        <Link className=\"open-search\" to=\"/search\">Search</Link>\n        </div>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}